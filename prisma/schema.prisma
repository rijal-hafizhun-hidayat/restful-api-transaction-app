// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model m_barang {
  id          Int           @id @default(autoincrement())
  kode        String        @unique @db.VarChar()
  nama        String        @db.VarChar()
  harga       Int           @db.Integer
  created_at  DateTime      @default(now()) @db.Timestamp()
  updated_at  DateTime      @updatedAt @db.Timestamp()
  t_sales_det t_sales_det[]
}

model m_customer {
  id         Int       @id @default(autoincrement())
  kode       String    @unique @db.VarChar()
  nama       String    @db.VarChar()
  telp       String    @db.VarChar()
  created_at DateTime  @default(now()) @db.Timestamp()
  updated_at DateTime  @updatedAt @db.Timestamp()
  t_sales    t_sales[]
}

model t_sales {
  id          Int      @id @default(autoincrement())
  kode        String   @unique @db.VarChar()
  tgl         DateTime @db.Timestamp()
  customer_id Int      @db.Integer
  subtotal    Decimal  @db.Decimal()
  diskon      Decimal  @db.Decimal()
  ongkir      Decimal  @db.Decimal()
  total_bayar Decimal  @db.Decimal()
  created_at  DateTime @default(now()) @db.Timestamp()
  updated_at  DateTime @updatedAt @db.Timestamp()

  costumer    m_customer    @relation(fields: [customer_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  t_sales_det t_sales_det[]
}

model t_sales_det {
  id            Int     @id @default(autoincrement())
  t_sales_id    Int     @db.Integer
  m_barang_id   Int     @db.Integer
  harga_bandrol Decimal @db.Decimal()
  qty           Int     @db.Integer
  diskon_pct    Decimal @db.Decimal()
  diskon_nilai  Decimal @db.Decimal()
  harga_diskon  Decimal @db.Decimal()
  total         Decimal @db.Decimal()

  sales t_sales  @relation(fields: [t_sales_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  items m_barang @relation(fields: [m_barang_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
}
